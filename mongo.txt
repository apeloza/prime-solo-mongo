//1. Create a collection named orders.

db.createCollection("orders")

//2. Insert at least 3 documents that represent an order. IMPORTANT: See section below for fields.

db.orders.insert({
"orderDate": new Date("2010-10-10"),
"orderTotal": "$90.00",
"lineitems": [{"unitprice": "10.00", "quantity": 9, "productName": "stickers"}]
},
{
"orderDate": new Date("2011-11-11"),
"orderTotal": "$154.00",
"lineitems": [{"unitprice": "75.00", "quantity": "2", "productName": "pistols"},
{"unitprice": "2.00", "quantity": 2, "productName": "chopsticks"}]
},
{
"orderDate": new Date("2012-12-12"),
"orderTotal": "$55.00",
"lineitems": [{"unitprice": "5.00", "quantity": 11, "productName": "yo-yos"}]
}
)

//3. Find a single order document, any order document.

db.orders.findOne()

//4. Find all orders and make them look pretty.

db.orders.find().pretty()

//5. Find all orders with an orderDate that is prior to 1/1/2016.

db.orders.find({
 "orderDate": {$lt: new Date("2016-01-01")}
})

//6. Find all orders with an orderDate that is after 1/1/2016.

db.orders.find({
 "orderDate": {$gt: new Date("2016-01-01")}
})

//7. Find orders with lineItems that have a quantity that is less than 50, but greater than 5. HINT: Look at $and.

db.orders.find( { $and:  [ { "lineitems.quantity" : { $gt : 5 } }, { "lineitems.quantity" : { $lt : 50 } } ] })

//8. Update one of your line items to 42.99. HINT: Look at dot notation

db.orders.update(
{_id: ObjectId("574751b09e58ce4f59be1a28")},
{"$set": {"lineitems[0].unitPrice": "42.99"}})

//9. Remove one of your orders.

db.orders.remove(
{_id: ObjectId("574751b09e58ce4f59be1a28")})
